<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.studentcrm.crm.mapper.GradesMapper">

<!-- 성적입력 -->
<insert id="insertScore" parameterType="org.studentcrm.crm.command.Exam_ScoreVO">
	 insert into exam_score (s_id, e_id, korScore, engScore, mathScore) 
	 values(#{s_id}, #{e_id},#{korScore},#{engScore},#{mathScore} )
</insert>


<!-- 성적 삭제 -->
<delete id="deleteScore" parameterType="java.lang.Integer">
	delete from exam_score where score_id = #{score_id}
</delete>

<!--성적 수정 -->
<update id="updateScore" parameterType="org.studentcrm.crm.command.Exam_ScoreVO">
        update exam_score set korScore = #{korScore}, engScore=${engScore}, mathScore=${mathScore}
        where score_id = #{score_id}
    </update>
    
<!-- 시험점수 리스트  -->
<select id="getTotalScoreList" resultType="org.studentcrm.crm.command.Exam_ScoreVO">
		select * from exam_score order by score_id
	</select>


<!-- 학생이름으로 조회 -->
<select id="getStudentList" parameterType="java.lang.String" 
resultType="org.studentcrm.crm.command.StudentVO">
	select * from student where s_name = #{s_name}
</select>

<!-- 학생번호로 학생시험점수 리스트  -->
<select id="getScoreList" resultType="org.studentcrm.crm.command.Exam_ScoreVO">
		select * from exam_score es
		join exam e on es.e_id =e.e_id
		join student s on es.s_id = s.s_id
		where es.s_id = #{es.s_id} 
		order by e.e_date
	</select>

<!-- 국영수 평균 -->
<select id="avgScore" parameterType="org.studentcrm.crm.command.Exam_ScoreVO"
resultType="org.studentcrm.crm.command.Exam_ScoreVO">
		select round((avg(korScore)+ avg(engScore)+ avg(mathScore))/ 3 ,1) as avgScore 
		from exam_score
		where score_id =#{score_id}
</select>

<!-- 전체 과목 평균 -->
<select id="subjectAvg" parameterType="org.studentcrm.crm.command.Exam_ScoreVO"
resultType="org.studentcrm.crm.command.ScoreVO">
		 select 
      	round(avg(case when korScore then es.korScore else null end),1) as korAvg,
        round(avg(case when engScore then es.engScore else null end),1) as engAvg,
        round(avg(case when mathScore then es.mathScore else null end),1) as mathAvg,
        round(avg((es.korScore + es.engScore + es.mathScore)/3),1)as totalAvgScore
    from exam_score es
    join exam e on es.e_id = e.e_id
    where es.e_id = #{e_id} <!-- and e.e_grade =#{e_grade} -->		
</select>

<!-- 시험 생성 -->
<insert id="insertExam" parameterType="org.studentcrm.crm.command.ExamVO">
	 insert into exam (e_name, e_grade, e_date) 
	 values( #{e_name},#{e_grade},#{e_date})
</insert>

<!--시험 수정 -->
<update id="updateExam" parameterType="org.studentcrm.crm.command.ExamVO">
    update exam set e_name = #{e_name}, e_grade=#{e_grade}, e_date=#{e_date}
    where e_id = #{e_id}
</update>


<!-- 성적 삭제 -->
<delete id="deleteExam" parameterType="java.lang.Integer">
	delete from exam where e_id = #{e_id}
</delete>

<!-- 시험이름으로 조회 -->
<select id="getexamList" parameterType="java.lang.String" 
resultType="org.studentcrm.crm.command.ExamVO">
	select * from exam where e_name = #{e_name}
</select>

</mapper>