<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.studentcrm.crm.mapper.GradesMapper">

<!-- 성적입력 -->
<insert id="insertScore" parameterType="org.studentcrm.crm.command.Exam_ScoreVO">
	 insert into exam_score (s_id, e_id, e_score) values(#{s_id}, #{e_id}, #{e_score})
</insert>

<!-- 성적 삭제 -->
<delete id="deleteScore" parameterType="java.lang.Integer">
	delete from exam_score where score_id = #{score_id}
</delete>

<!--성적 수정 -->
<update id="updateScore" parameterType="org.studentcrm.crm.command.Exam_ScoreVO">
        update exam_score set e_score = #{e_score}
        where score_id = #{score_id}
    </update>
    
<!-- 시험점수 리스트  -->
<select id="getTotalScoreList" resultType="org.studentcrm.crm.command.Exam_ScoreVO">
		select * from exam_score order by score_id
	</select>

    

<!--국영수 평균 구하기 -->
<select id="avgScore" parameterType="org.studentcrm.crm.command.Exam_ScoreVO" 
resultType="org.studentcrm.crm.command.AvgVO">
    select s_id,
        avg(case when e.e_subject = '국어' then es.e_score else null end) as korScore,
        avg(case when e.e_subject = '영어' then es.e_score else null end) as engScore,
        avg(case when e.e_subject = '수학' then es.e_score else null end) as mathScore,
        avg(es.e_score) as avgScore
    from exam_score es
    join exam e on es.e_id = e.e_id
    where es.s_id = #{s_id} and e.e_name = #{e_name}
    group by es.s_id;
</select>


<!-- 평균 구하는 메서드 -->
<select id="SubjectsAvg" parameterType="org.studentcrm.crm.command.Exam_ScoreVO"
        resultType="org.studentcrm.crm.command.AvgVO">
    select
        avg(case when e.e_subject = '국어' then es.e_score else null end) as korAvg,
        avg(case when e.e_subject = '영어' then es.e_score else null end) as engAvg,
        avg(case when e.e_subject = '수학' then es.e_score else null end) as mathAvg
    from exam_score es
    join exam e on es.e_id = e.e_id
    where e.e_id = #{e_id} and e.e_name = #{e_name}
</select>

<!-- 학생이름으로 조회 -->
<select id="getStudentList" parameterType="java.lang.String" 
resultType="org.studentcrm.crm.command.StudentVO">
	select s_id, s_name, s_gender, s_phone, s_school from student where s_name = #{s_name}
</select>

<!-- 학생번호로 학생시험점수 리스트  -->
<select id="getScoreList" resultType="org.studentcrm.crm.command.Exam_ScoreVO">
		select * from exam_score es
		join exam e on es.e_id =e.e_id
		where s_id = #{s_id} 
		order by e_date
	</select>


<!-- 
<select id="korAvg" parameterType="org.studentcrm.crm.command.Exam_ScoreVO"
		resultType="org.studentcrm.crm.command.AvgVO">
		select avg(e_score) as korAvg from exam_score es
	    inner join exam e on es.e_id = e.e_id
	    where e.e_subject = '국어'
	    and e.e_id = #{e_id} and e.e_name = #{e_name}
</select>

영어 전체 평균 구하기
<select id="engAvg" parameterType="org.studentcrm.crm.command.Exam_ScoreVO"
		resultType="org.studentcrm.crm.command.AvgVO">
		select avg(e_score) as engAvg from exam_score es
	    join exam e on es.e_id = e.e_id
	    where e.e_subject = '영어'
	    and e.e_id = #{e_id} and e.e_name = #{e_name}
</select>

수학 전체 평균 구하기
<select id="mathAvg" parameterType="org.studentcrm.crm.command.Exam_ScoreVO"
		resultType="org.studentcrm.crm.command.AvgVO">
		select avg(e_score) as mathAvg from exam_score es
	    join exam e on es.e_id = e.e_id
	    where e.e_subject = '수학'
	    and e.e_id = #{e_id} and e.e_name = #{e_name}
</select> -->




</mapper>